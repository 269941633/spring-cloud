logging.config=classpath:logback.xml
logging.path=d:/logs

##tomcat set###

# eureka的默认端口是8761
server.port=8888
server.session-timeout=60
###########

spring.application.name=zuul-server

#像eureka服务注册信息时，使用ip地址，默认使用hostname
eureka.instance.preferIpAddress=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
eureka.client.serviceUrl.defaultZone=http://01.server.eureka:8081/eureka/

#开启健康检查(需要spring-boot-starter-actuator依赖)
eureka.client.healthcheck.enabled=true
#租期到期时间，默认90秒
eureka.instance.lease-expiration-duration-in-seconds=30
#租赁更新时间间隔，默认30，即30秒发送一次心跳
eureka.instance.lease-renewal-interval-in-seconds=10

#启动负载均衡的重试机制，默认false
spring.cloud.loadbalancer.retry.enabled=true
#Hystrix是否启用超时时间
hystrix.command.default.execution.timeout.enabled=true
#Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000
#hystrix dashboard的信息收集频率，默认500毫秒
hystrix.stream.dashboard.intervalInMilliseconds=5000

#ribbon请求连接的超时时间
ribbon.ConnectTimeout=250
#请求处理的超时时间
ribbon.ReadTimeout=1000
#对所有请求操作都进行重试
ribbon.OkToRetryOnAllOperations=true
#对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）
ribbon.MaxAutoRetries=0
#切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）
ribbon.MaxAutoRetriesNextServer=1


zuul.ignored-services=*
##反向代理配置，类似nginx

#####用户管理服务#####
zuul.routes.user-api.path=/user-api/**
#当stripPrefix=true,http://127.0.0.1:7081/user-api/user/find =>http://127.0.0.1:7081/user/find
#当stripPrefix=false,http://127.0.0.1:7081/user-api/user/find =>http://127.0.0.1:7081/user-api/user/find
zuul.routes.user-api.stripPrefix=true
#eureka中对应的服务名称
zuul.routes.user-api.serviceId=api-user-server
#重试，默认false
zuul.routes.user-api.retryable=true
#ribbo负载均衡策略配置，默认是依次轮询
#api-user-server.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule


